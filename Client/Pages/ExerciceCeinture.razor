@page "/ceinture"
@using GenerateurCeinture.Client.Pages.Models
@using GenerateurCeinture.Shared
@using Microsoft.Extensions.Logging
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient Http
@inject ILogger<ExerciceCeinture> Logger

<PageTitle>Ceinture</PageTitle>

<h1>Ceinture de Mathématiques</h1>

<p>Exercez-vous aux ceintures de Math.</p>

@if (model == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Opération</th>
                <th></th>
                <th>Résultat</th>
            </tr>
        </thead>
        <tbody>
            <EditForm Model="@model">

            @foreach (var item in model.Items)
            {
                <tr>
                    <td>@item.Expression.LeftOperand</td>
                    <td>@switch (item.Expression.Operator)
{
                        case MathOperator.Add: <b>+</b> 
                        break;
                        case MathOperator.Divide: <b>÷</b> 
                        break;
                        case MathOperator.Multiply: <b>*</b> 
                        break;
                        case MathOperator.Subtract: <b>-</b> 
                        break;  
}
                    </td>
                    <td>@item.Expression.RightOperand</td>
                    <td><InputText @bind-Value="item.Resultat" />  <input type="hidden" value=@item.Expression.Result /></td>
                </tr>
            }
            </EditForm>
        </tbody>
    </table>
}

@code {
    private ResultModel model;
    private string testBinding;

    protected override async Task OnInitializedAsync()
    {
        //#if DEBUG
        //        Thread.Sleep(1000);
        //#endif
        try
        {
            //var options = new JsonSerializerOptions();
            //options.Converters.Add(new JsonStringEnumConverter());
            var ceinture = await Http.GetFromJsonAsync<Ceinture?>("api/ceinture?numberOfExpression=10"); //, options);
            if (ceinture == null) model = null;
            else {
                model = new ResultModel(ceinture);
            }            
        }
        catch (Exception ex)
        {
            model = null;
            Logger.LogError(ex, "Failed to load ceinture");
        }
    }
}
